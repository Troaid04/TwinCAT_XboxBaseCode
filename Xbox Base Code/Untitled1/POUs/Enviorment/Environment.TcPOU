<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Environment" Id="{bc804a70-ba27-434f-a722-0a692fdcb6d7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Environment
VAR_INPUT

			NumberOfXTiles				: 		INT; // Number of X tiles in a System
			NumberOfYTiles				: 		INT; // Number of Y tiles in a System	

END_VAR
VAR_OUTPUT
	
			MaxTableYTravel 			: 		LREAL ; // Max Y travel of mover
			MaxTableXTravel 			: 		LREAL ; // Max X travel of mover
		             
			MinTableYTravel 			: 		LREAL ; // Min Y travel of mover
			MinTableXTravel 			:		LREAL ; // Min X travel of mover
			
			TableType					:		STRING(3); // Table Demo Type 

END_VAR
VAR
	
			Buffer						: 		INT := 5; // Buffer space 
			RotationDisplacement		:		LREAL; // Rotation displacemnt caused by mover   

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Boundry" Id="{bdc5a1ba-4bdc-4f6e-891d-211745460f60}">
      <Declaration><![CDATA[METHOD Boundry 
VAR_INPUT
	

			MoverTypeWidth 				: 		LREAL; // Movers Width/2
		    MoverTypeLength				: 		LREAL; // Movers Length/2
			
END_VAR 

VAR 

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[RotationDisplacement :=  (MoverTypeWidth) * SIN(0.1745); // Calculate Rotation displacemnt of Mover


MaxTableYTravel := (NumberOfYTiles * 240) - MoverTypeWidth  - Buffer - RotationDisplacement ; // Calculate Max Y travel of Mover
MaxTableXTravel := (NumberOfXTiles * 240) - MoverTypeLength - Buffer - RotationDisplacement; // Calculate Max X travel of Mover
		
MinTableYTravel :=  MoverTypeWidth   + Buffer + RotationDisplacement; // Calculate Min Y travel of Mover
MinTableXTravel :=  MoverTypeLength  + Buffer + RotationDisplacement; // Calculate Min X travel of Mover


IF NumberOfXTiles = 2 AND NumberOfYTiles = 1 THEN
	TableType := '2x1'; // 2x1 demo table
ELSIF NumberOfXTiles = 4 AND NumberOfYTiles = 3 THEN
	TableType := '4x3'; // 4x3 demo table 
ELSE
	TableType := 'NaN'; // Not a demo table supported 
END_IF



]]></ST>
      </Implementation>
    </Method>
    <Method Name="Forces" Id="{97bf2863-1c46-48a8-8c41-067ed868cafd}">
      <Declaration><![CDATA[METHOD Forces 
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Environment">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Environment.Boundry">
      <LineId Id="51" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="13" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="64" Count="1" />
      <LineId Id="67" Count="1" />
      <LineId Id="70" Count="2" />
      <LineId Id="69" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="30" Count="0" />
    </LineIds>
    <LineIds Name="Environment.Forces">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>